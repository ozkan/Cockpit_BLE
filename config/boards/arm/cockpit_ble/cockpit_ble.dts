/*
 * Copyright (c) 2023 ozkan (github.com/ozkan)
 *
 * SPDX-License-Identifier: MIT
 */
 
/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include "cockpit_ble_oled.dtsi"
#include "cockpit_ble_led_strip.dtsi"
#include "cockpit_ble_flash.dtsi"
#include "layouts/full.dtsi"

&cockpit_ble_full_layout {
    transform = <&default_transform>;
};


/ {
	model = "cockpit_ble";
	compatible = "cockpit_ble";

	chosen {
		zephyr,display = &oled;
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zmk,kscan = &kscan0;
		zmk,physical-layout = &cockpit_ble_full_layout;
		zmk,underglow = &led_strip;
		zephyr,console = &cdc_acm_uart;
		zmk,battery = &vbatt;
	};

	leds {
		compatible = "gpio-leds";
		blue_led: led_0 {
			gpios = <&gpio1 13 GPIO_ACTIVE_HIGH>;
		};
	};

	left_encoder: encoder_left {
		compatible = "alps,ec11";
        a-gpios = <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 23 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    right_encoder: encoder_right {
		compatible = "alps,ec11";
        a-gpios = <&gpio0 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    sensors {
		compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
        };

	EXT_POWER {
		compatible = "zmk,ext-power-generic";
		control-gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
		init-delay-ms = <200>;
	};

	vbatt: vbatt {
		compatible = "zmk,battery-voltage-divider";
		io-channels = <&adc 7>;
		output-ohms = <2130000>;
		full-ohms = <(2130000 + 826000)>;
	};

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;

        map = <
        	RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)        RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
        	RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)        RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
        	RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)        RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                RC(3,2) RC(3,3) RC(3,4)    RC(3,5) RC(3,6)     RC(3,7) RC(3,8) RC(3,9) 
        >;
    };

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		wakeup-source;

		diode-direction = "col2row";
		row-gpios
			= <&gpio0 3  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row0
			, <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row1
			, <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row2
			, <&gpio0 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row3
			;
		col-gpios
			= <&gpio0 5   GPIO_ACTIVE_HIGH> // col0  
			, <&gpio0 4   GPIO_ACTIVE_HIGH> // col1  
			, <&gpio0 30  GPIO_ACTIVE_HIGH> // col2
			, <&gpio0 29  GPIO_ACTIVE_HIGH> // col3
			, <&gpio0 28  GPIO_ACTIVE_HIGH> // col4
			, <&gpio0 2   GPIO_ACTIVE_HIGH> // col5
			, <&gpio1 6   GPIO_ACTIVE_HIGH> // col6
			, <&gpio1 4   GPIO_ACTIVE_HIGH> // col7
			, <&gpio1 2   GPIO_ACTIVE_HIGH> // col8
			, <&gpio1 1   GPIO_ACTIVE_HIGH> // col9
			, <&gpio1 3   GPIO_ACTIVE_HIGH> // col10
			, <&gpio1 0   GPIO_ACTIVE_HIGH> // col11
			;
	};
};


&left_encoder {
    status = "okay";
};

&right_encoder {
    status = "okay";
};


&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&adc {
	status = "okay";
};

&usbd {
	status = "okay";
	cdc_acm_uart: cdc_acm_uart {
		compatible = "zephyr,cdc-acm-uart";
	};
};

zephyr_udc0: &usbd {
    status = "okay";
};